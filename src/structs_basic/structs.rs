/// Structs ‡πÉ‡∏ô Rust ‡∏Ñ‡∏∑‡∏≠ ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏≤‡∏¢‡πÜ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô
/// ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≥‡∏´‡∏ô‡∏î method ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö struct ‡πÑ‡∏î‡πâ
/// ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® struct ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á struct ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ struct ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® field ‡∏Ç‡∏≠‡∏á struct ‡πÉ‡∏ô {} ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ field ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
struct Crabby {
    name: String,
    skill_level: u32,
    hit_points: u8,
}

struct Position(i32, i32);

impl Crabby {
    // ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® method ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö struct ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á impl ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ struct ‡πÅ‡∏•‡∏∞ method ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    // ‡πÇ‡∏î‡∏¢‡πÉ‡∏ô method ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á field ‡∏Ç‡∏≠‡∏á struct ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ self ‡πÅ‡∏•‡∏∞ . ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ field
    fn take_damage(&mut self, damage: u8) {
        self.hit_points = self.hit_points.saturating_sub(damage); // ‡πÉ‡∏ä‡πâ saturating_sub ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏•‡∏ö‡πÑ‡∏î‡πâ ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤‡∏•‡∏ö‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô 0
        println!("{} took {} damage!‚öîÔ∏è", self.name, damage);
    }

    fn healing(&mut self, healing: u8) {
        if (self.hit_points + healing) > 100 {
            self.hit_points = 100;
        } else {
            self.hit_points += healing;
        }
        println!("{} healed {} hit points!ü©π", self.name, healing);
    }

    fn level_up(&mut self) {
        self.skill_level += 1;
        println!("{} leveled up!üéâ", self.name);
    }
}

pub fn run() {
    let mut crabby = Crabby {
        name: String::from("Crabby"),
        skill_level: 100,
        hit_points: 100,
    };

    println!("=== Structs ===");
    println!(
        "Crabby's hit points before taking damage: {}",
        crabby.hit_points
    );
    crabby.take_damage(90);
    crabby.healing(100);
    crabby.level_up();
    println!("Crabby's name: {}", crabby.name);
    println!("Crabby's skill level: {}", crabby.skill_level);
    println!("Crabby's hit points: {}", crabby.hit_points);

    // .. ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ copy ‡∏Ñ‡πà‡∏≤ field ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å struct ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    // ‡∏£‡∏∞‡∏ß‡∏±‡∏á ownership ‡∏Ç‡∏≠‡∏á field ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô reference ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á field ‡∏ô‡∏±‡πâ‡∏ô
    // ‡πÄ‡∏ä‡πà‡∏ô name ‡πÉ‡∏ô struct Crabby ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ name ‡πÉ‡∏ô new_crabby ‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ name ‡πÉ‡∏ô crabby ‡∏î‡πâ‡∏ß‡∏¢
    let new_crabby = Crabby {
        name: String::from("New Crabby"),
        ..crabby
    };
    println!("New Crabby's name: {}", new_crabby.name);
    println!("New Crabby's skill level: {}", new_crabby.skill_level);
    println!("New Crabby's hit points: {}", new_crabby.hit_points);

    // Tuple structs ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô tuple ‡πÅ‡∏ï‡πà‡πÉ‡∏ä‡πâ struct ‡πÅ‡∏ó‡∏ô ()
    let position = Position(10, 20);
    println!("Position: ({}, {})", position.0, position.1);
}
