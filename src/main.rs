// Rust ‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå src/main.rs ‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥
// ‡πÅ‡∏ï‡πà‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏õ‡πá‡∏ô entry point ‡πÑ‡∏î‡πâ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á cargo new my_project --bin

// ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô src/ basics/variables.rs
// ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á mod ‡πÅ‡∏•‡∏∞ use ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå src/main.rs

// 1. ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á mod ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô
// mod basics {
// pub mod control_flow;
// pub mod functions;
// pub mod variables;
// }

// mod ownership {
//     // pub mod references;
//     // pub mod borrowing;
//     // pub mod lifetime;
// }

// mod structs_basic {
//     pub mod structs;
// }

// mod traits_and_generics {
//     pub mod basic_traits;
// }

// mod data_types {
//     pub mod string;
// }

mod flow {
    pub mod basic_loop;
}

// 2. ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á use ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô
// use basics::control_flow
// use basics::variables;
// use basics::functions;

// use ownership::references;
// use ownership::borrowing;
// use ownership::lifetime;
// use ownership::structs;

// use structs_basic::structs;

// use traits_and_generics::basic_traits;

// use data_types::string;

use flow::basic_loop;

fn main() {
    // println!("Hello, Crabby! ü¶Ä");
    // variables::variables();
    // control_flow::control_flow();
    // let item = "ü¶Ä";
    // let result = functions::hello(item);
    // println!("{}", result);

    // borrowing::run();
    // lifetime::run();

    // structs::run();
    // basic_traits::run();

    // string::run();

    basic_loop::run();
}
